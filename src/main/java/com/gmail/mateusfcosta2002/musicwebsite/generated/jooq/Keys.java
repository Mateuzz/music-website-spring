/*
 * This file is generated by jOOQ.
 */
package com.gmail.mateusfcosta2002.musicwebsite.generated.jooq;


import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Authorities;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Authors;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Categories;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Musics;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.MusicsTags;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Playlists;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.PlaylistsMusics;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Tags;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Users;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.AuthoritiesRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.AuthorsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.CategoriesRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.MusicsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.MusicsTagsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.PlaylistsMusicsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.PlaylistsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.TagsRecord;
import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthoritiesRecord> AUTHORITIES_PKEY = Internal.createUniqueKey(Authorities.AUTHORITIES, DSL.name("authorities_pkey"), new TableField[] { Authorities.AUTHORITIES.USER_ID, Authorities.AUTHORITIES.AUTHORITY }, true);
    public static final UniqueKey<AuthorsRecord> AUTHORS_PKEY = Internal.createUniqueKey(Authors.AUTHORS, DSL.name("authors_pkey"), new TableField[] { Authors.AUTHORS.ID }, true);
    public static final UniqueKey<CategoriesRecord> CATEGORIES_PKEY = Internal.createUniqueKey(Categories.CATEGORIES, DSL.name("categories_pkey"), new TableField[] { Categories.CATEGORIES.ID }, true);
    public static final UniqueKey<MusicsRecord> MUSICS_PKEY = Internal.createUniqueKey(Musics.MUSICS, DSL.name("musics_pkey"), new TableField[] { Musics.MUSICS.ID }, true);
    public static final UniqueKey<MusicsTagsRecord> MUSICS_TAGS_PKEY = Internal.createUniqueKey(MusicsTags.MUSICS_TAGS, DSL.name("musics_tags_pkey"), new TableField[] { MusicsTags.MUSICS_TAGS.MUSICS_ID, MusicsTags.MUSICS_TAGS.TAGS_NAME }, true);
    public static final UniqueKey<PlaylistsRecord> PLAYLISTS_PKEY = Internal.createUniqueKey(Playlists.PLAYLISTS, DSL.name("playlists_pkey"), new TableField[] { Playlists.PLAYLISTS.ID }, true);
    public static final UniqueKey<PlaylistsMusicsRecord> PLAYLISTS_MUSICS_PKEY = Internal.createUniqueKey(PlaylistsMusics.PLAYLISTS_MUSICS, DSL.name("playlists_musics_pkey"), new TableField[] { PlaylistsMusics.PLAYLISTS_MUSICS.MUSICS_ID, PlaylistsMusics.PLAYLISTS_MUSICS.PLAYLIST_ID }, true);
    public static final UniqueKey<TagsRecord> TAGS_PKEY = Internal.createUniqueKey(Tags.TAGS, DSL.name("tags_pkey"), new TableField[] { Tags.TAGS.NAME }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_USERNAME_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_username_key"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthoritiesRecord, UsersRecord> AUTHORITIES__FKK91UPMBUEYIM93V469WJ7B2QH = Internal.createForeignKey(Authorities.AUTHORITIES, DSL.name("fkk91upmbueyim93v469wj7b2qh"), new TableField[] { Authorities.AUTHORITIES.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<CategoriesRecord, CategoriesRecord> CATEGORIES__FKSAOK720GSU4U2WRGBK10B5N8D = Internal.createForeignKey(Categories.CATEGORIES, DSL.name("fksaok720gsu4u2wrgbk10b5n8d"), new TableField[] { Categories.CATEGORIES.PARENT_ID }, Keys.CATEGORIES_PKEY, new TableField[] { Categories.CATEGORIES.ID }, true);
    public static final ForeignKey<MusicsRecord, CategoriesRecord> MUSICS__FK7EHFCD0BQHA5UAT6VRO7Y5OKI = Internal.createForeignKey(Musics.MUSICS, DSL.name("fk7ehfcd0bqha5uat6vro7y5oki"), new TableField[] { Musics.MUSICS.CATEGORY_ID }, Keys.CATEGORIES_PKEY, new TableField[] { Categories.CATEGORIES.ID }, true);
    public static final ForeignKey<MusicsRecord, AuthorsRecord> MUSICS__FKDIAR1U91WFI42XMG6VFL74N56 = Internal.createForeignKey(Musics.MUSICS, DSL.name("fkdiar1u91wfi42xmg6vfl74n56"), new TableField[] { Musics.MUSICS.AUTHOR_ID }, Keys.AUTHORS_PKEY, new TableField[] { Authors.AUTHORS.ID }, true);
    public static final ForeignKey<MusicsTagsRecord, TagsRecord> MUSICS_TAGS__FKODMHVTTRIX1AS8030G35KT6LG = Internal.createForeignKey(MusicsTags.MUSICS_TAGS, DSL.name("fkodmhvttrix1as8030g35kt6lg"), new TableField[] { MusicsTags.MUSICS_TAGS.TAGS_NAME }, Keys.TAGS_PKEY, new TableField[] { Tags.TAGS.NAME }, true);
    public static final ForeignKey<MusicsTagsRecord, MusicsRecord> MUSICS_TAGS__FKQ50LFT5MGEJQTJ0MTH63TALPP = Internal.createForeignKey(MusicsTags.MUSICS_TAGS, DSL.name("fkq50lft5mgejqtj0mth63talpp"), new TableField[] { MusicsTags.MUSICS_TAGS.MUSICS_ID }, Keys.MUSICS_PKEY, new TableField[] { Musics.MUSICS.ID }, true);
    public static final ForeignKey<PlaylistsRecord, UsersRecord> PLAYLISTS__FKKW37PIXQVAP2UC094O95J8LU7 = Internal.createForeignKey(Playlists.PLAYLISTS, DSL.name("fkkw37pixqvap2uc094o95j8lu7"), new TableField[] { Playlists.PLAYLISTS.CREATED_BY_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PlaylistsMusicsRecord, PlaylistsRecord> PLAYLISTS_MUSICS__FK1558UIAUM4VTXIKOM9IRUBGC8 = Internal.createForeignKey(PlaylistsMusics.PLAYLISTS_MUSICS, DSL.name("fk1558uiaum4vtxikom9irubgc8"), new TableField[] { PlaylistsMusics.PLAYLISTS_MUSICS.PLAYLIST_ID }, Keys.PLAYLISTS_PKEY, new TableField[] { Playlists.PLAYLISTS.ID }, true);
    public static final ForeignKey<PlaylistsMusicsRecord, MusicsRecord> PLAYLISTS_MUSICS__FKCKS57CNN25VMIOLLWS9LUORYO = Internal.createForeignKey(PlaylistsMusics.PLAYLISTS_MUSICS, DSL.name("fkcks57cnn25vmiollws9luoryo"), new TableField[] { PlaylistsMusics.PLAYLISTS_MUSICS.MUSICS_ID }, Keys.MUSICS_PKEY, new TableField[] { Musics.MUSICS.ID }, true);
}
