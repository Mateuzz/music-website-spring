/*
 * This file is generated by jOOQ.
 */
package com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.records;


import com.gmail.mateusfcosta2002.musicwebsite.generated.jooq.tables.Categories;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CategoriesRecord extends UpdatableRecordImpl<CategoriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.categories.nesting</code>.
     */
    public void setNesting(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.categories.nesting</code>.
     */
    public Integer getNesting() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.categories.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.categories.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.categories.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.categories.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.categories.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.categories.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoriesRecord
     */
    public CategoriesRecord() {
        super(Categories.CATEGORIES);
    }

    /**
     * Create a detached, initialised CategoriesRecord
     */
    public CategoriesRecord(Integer nesting, Long id, Long parentId, String name) {
        super(Categories.CATEGORIES);

        setNesting(nesting);
        setId(id);
        setParentId(parentId);
        setName(name);
        resetChangedOnNotNull();
    }
}
